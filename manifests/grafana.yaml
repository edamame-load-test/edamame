---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: grafana-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: grafana
  name: grafana
spec:
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      securityContext:
        fsGroup: 472
        supplementalGroups:
          - 0
      containers:
        - name: grafana
          image: grafana/grafana:9.1.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 3000
              name: http-grafana
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              path: /robots.txt
              port: 3000
              scheme: HTTP
            initialDelaySeconds: 10
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 2
          livenessProbe:
            failureThreshold: 3
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            tcpSocket:
              port: 3000
            timeoutSeconds: 1
          resources:
            requests:
              cpu: 250m
              memory: 750Mi
          env:
            - name: USERNAME
              valueFrom:
                secretKeyRef:
                  name: psql-secret
                  key: psql-username
            - name: PASSWORD
              valueFrom:
                secretKeyRef:
                  name: psql-secret
                  key: psql-password
          volumeMounts:
            - name: grafana-pv
              mountPath: /var/lib/grafana
            - name: config-volume
              mountPath: /etc/grafana/provisioning/datasources/
            - name: dashboard-volume
              mountPath: etc/grafana/provisioning/dashboards/
            - name: http-dashboard-volume
              mountPath: /var/lib/grafana/dashboards/
      volumes:
        - name: grafana-pv
          persistentVolumeClaim:
            claimName: grafana-pvc
        - name: config-volume
          configMap:
            name: grafana-datasources
        - name: dashboard-volume
          configMap:
            name: grafana-dashboards
        - name: http-dashboard-volume
          configMap:
            name: http-dashboard
# apiVersion: v1
# kind: ConfigMap
# metadata:
#   name: grafana-config
# data:
#   grafana.ini: |-
#     [auth.anonymous]
#     enabled = true
#     org_name = Main Org.
#     org_role = Viewer
# ---
# apiVersion: v1
# kind: PersistentVolumeClaim
# metadata:
#   name: grafana-pvc
# spec:
#   accessModes:
#     - ReadWriteOnce
#   resources:
#     requests:
#       storage: 1Gi
# ---
# apiVersion: apps/v1
# kind: Deployment
# metadata:
#   labels:
#     app: grafana
#   name: grafana
# spec:
#   selector:
#     matchLabels:
#       app: grafana
#   template:
#     metadata:
#       labels:
#         app: grafana
#     spec:
#       securityContext:
#         fsGroup: 472
#         supplementalGroups:
#           - 0
#       containers:
#         - name: grafana
#           image: grafana/grafana:9.1.0
#           imagePullPolicy: IfNotPresent
#           ports:
#             - containerPort: 3000
#               name: http-grafana
#               protocol: TCP
#           readinessProbe:
#             failureThreshold: 3
#             httpGet:
#               path: /robots.txt
#               port: 3000
#               scheme: HTTP
#             initialDelaySeconds: 10
#             periodSeconds: 30
#             successThreshold: 1
#             timeoutSeconds: 2
#           livenessProbe:
#             failureThreshold: 3
#             initialDelaySeconds: 30
#             periodSeconds: 10
#             successThreshold: 1
#             tcpSocket:
#               port: 3000
#             timeoutSeconds: 1
#           resources:
#             requests:
#               cpu: 250m
#               memory: 750Mi
#           env:
#             - name: USERNAME
#               valueFrom:
#                 secretKeyRef:
#                   name: psql-secret
#                   key: psql-username
#             - name: PASSWORD
#               valueFrom:
#                 secretKeyRef:
#                   name: psql-secret
#                   key: psql-password
#           volumeMounts:
#             - name: grafana-pv
#               mountPath: /var/lib/grafana
#             - name: config-volume
#               mountPath: /etc/grafana/provisioning/datasources/
#             - name: dashboard-volume
#               mountPath: etc/grafana/provisioning/dashboards/
#             - name: http-dashboard-volume
#               mountPath: /var/lib/grafana/dashboards/
#             - name: grafana-config
#               mountPath: /etc/grafana/grafana.ini
#               subPath: grafana.ini
#       volumes:
#         - name: grafana-pv
#           persistentVolumeClaim:
#             claimName: grafana-pvc
#         - name: config-volume
#           configMap:
#             name: grafana-datasources
#         - name: dashboard-volume
#           configMap:
#             name: grafana-dashboards
#         - name: http-dashboard-volume
#           configMap:
#             name: http-dashboard
#         - name: grafana-config
#           configMap:
#             name: grafana-config
